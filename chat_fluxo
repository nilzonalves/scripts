#!/bin/bash

if [ -z "$1" ]; then
    read -p "Informe o protocolo: " protocolo_completo
else
    # Usa o parâmetro passado
    protocolo_completo="$1"
fi

# Remove os 8 primeiros dígitos do protocolo
var="${protocolo_completo:8}"

# Captura o dia/quantidade para voltar à data desejada
read -p "Informe o número de dias anteriores [data]: " dias

# Define o caminho do arquivo de log com base no número de dias
if [ "$dias" -eq 0 ]; then
    log_file="/var/log/asterisk/ffpainel_chat.log"
elif [ "$dias" -eq 1 ]; then
    log_file="/var/log/asterisk/ffpainel_chat.log.1"
else
    log_file="/var/log/asterisk/ffpainel_chat.log.$dias.zst"
fi

# Verifica se o arquivo de log existe
if [ ! -f "$log_file" ]; then
    echo "Arquivo de log não encontrado: $log_file"
    exit 1
fi

# Lê o arquivo de log e aplica o filtro necessário
if [[ "$dias" -eq 0 || "$dias" -eq 1 ]]; then
    # Log não compactado
    grep -iE "$var" "$log_file" | awk -v var="$var" '
        {
            # Captura a data e hora no início da linha
            if (match($0, /^\[([0-9]{2}\/[0-9]{2}\/[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2})\]/)) {
                data_hora = substr($0, RSTART + 1, RLENGTH - 2)
                linha = $0
            }
            # Filtra as linhas que contêm o padrão desejado
            if (linha ~ var) {
                # Extrai apenas a parte desejada da linha (o que já era exibido antes)
                if (match(linha, /(Processando o contexto .*|Tomada de decisão: .*|Processando o menu .*)/)) {
                    print data_hora, substr(linha, RSTART, RLENGTH)
                }
            }
        }
    ' || echo "Nenhuma correspondência encontrada para: $var"
else
    # Log compactado (.zst)
    zstdcat "$log_file" | grep -iE "$var" | awk -v var="$var" '
        {
            # Captura a data e hora no início da linha
            if (match($0, /^\[([0-9]{2}\/[0-9]{2}\/[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2})\]/)) {
                data_hora = substr($0, RSTART + 1, RLENGTH - 2)
                linha = $0
            }
            # Filtra as linhas que contêm o padrão desejado
            if (linha ~ var) {
                # Extrai apenas a parte desejada da linha (o que já era exibido antes)
                if (match(linha, /(Processando o contexto .*|Tomada de decisão: .*|Processando o menu .*)/)) {
                    print data_hora, substr(linha, RSTART, RLENGTH)
                }
            }
        }
    ' || echo "Nenhuma correspondência encontrada para: $var"
fi
